.. _pattern-image:

이미지 서비스 패턴
******************

이미지 개수가 억 단위가 되면 통제가 어렵다. 
배치는 답이 아니다. (단점 열거)
일관된 다이어그램을 위해 AWS Icon을 사용한다.



제목
====================================

가나다라


해결하고 싶은 문제
------------------------------------

마바사


패턴 설명
------------------------------------

아자차카


구현
------------------------------------

타파하


장점
------------------------------------

abcd


주의점
------------------------------------

efgh


기타
------------------------------------

hijk



고용량 이미지 최적화 패턴
====================================

해결하고 싶은 문제
------------------------------------
고용량 이미지 파일이 서비스되는 경우 전송비용이 상승할 뿐만 아니라 클라이언트 서비스 품질이 저하되는 문제가 발생한다.


솔루션/패턴 설명
------------------------------------
이미지가 스토리지에 저장되면 통제가 불가능하다고 생각하는 경향이 있다. 
스토리지에 저장되기 전에 이미지 최적화 프로세스를 진행하려는 시도는 실패할 확률이 높다. 
서비스 고도화에 따라 스토리지로 향하는 입구가 많아지기 때문이다.

입구를 모두 통제할 수 없다면 단일 출구 정책을 사용하는 것이 효과적이다.

.. figure:: img/dgm001.png
   :align: center

이미지서버가 이미지를 전송/배포하기 전 고용량 이미지를 최적화한다.


구현
------------------------------------
-  이미지 스토리지 앞에 이미지 변환서버 용도의 ``STON`` 을 배치한다.
-  ``STON`` 이미지툴 기능을 활성화한다. (최대크기를 제한하지 않는다.) ::
   
      # server.xml - <Server><VHostDefault><Options>
      # vhosts.xml - <Vhosts><Vhost><Options>

      <Dims Status="Active" Keyword="dims" MaxSourceSize="0" />


-  ``STON`` 이미지 포맷을 대상으로 URL 전처리 규칙을 추가한다. ::

      <URLRewrite>
         <Pattern>example.com/.*\.(jpg|png).*)</Pattern>
         <Replace>example.com/#1/dims/optimize</Replace>
      </URLRewrite>

-  이미지 스토리지 도메인을 ``STON`` 으로 위임한다. 


장점/효과
------------------------------------
-  기존 URL을 변경없이 사용한다.
-  항상 균일하게 최적화된 이미지 서비스가 가능하다.
-  별도의 관리/배치 프로세스 없이 이미지 처리가 자동화된다.
-  이미지 최적화 정책이 변경되더라도 무중단 정책 변경이 가능하다.
-  이미지 처리량이 많아질 경우 손쉽게 Scale-out이 가능하다.


주의점
------------------------------------

이미지 저장시 최소한의 용량 최적화는 반드시 필요하다.

-  이미지 크기가 너무 크면 자칫 스토리지 대역폭에 병목이 발생할 수 있다.
-  이미지 최적화를 위한 컴퓨팅 파워가 과도하게 투입될 수 있다.


기타
------------------------------------
-  자주 변환되는 이미지를 캐싱해 놓으면 불필요한 중복 최적화를 방지할 수 있다.





최대 이미지 해상도 패턴
====================================

해결하고 싶은 문제
------------------------------------
이미지 원본이 


패턴 설명
------------------------------------

구현
------------------------------------

장점
------------------------------------

주의점
------------------------------------


기타
------------------------------------



키다리 이미지 분할 패턴
====================================

해결하고 싶은 문제
------------------------------------
해상도에 비해 지나치게 고용량의 이미지 파일이 서비스되는 경우, 전송비용이 상승할 뿐만 아니라 클라이언트 서비스 품질이 저하되는 문제가 발생한다.



워터마크 자동화 패턴
====================================